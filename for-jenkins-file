pipeline {
    agent any
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner' // Correctly setting the tool
    }
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main',
                    changelog: false,
                    credentialsId: '3aad20b2-dd69-4b32-b686-063a57fc446a',
                    poll: false,
                    url: 'https://github.com/kienfru/shopping-app.git'
            }
        }
        
        stage('COMPILE') {
            steps {
                sh "mvn clean compile -DskipTests=true -X"
            }
        }
        
        stage('SonarQube Scan') {
            steps {
                withSonarQubeEnv('sonar-server') { // Ensure 'sonar-server' matches your SonarQube configuration in Jenkins
                    sh '''
                        $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName="Shopping App" \
                        -Dsonar.projectKey=shopping-app \
                        -Dsonar.sources=src/main/java \
                        -Dsonar.java.binaries=target/classes
                    '''
                }
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn clean package -DskipTests=true -X"
            }
        }
        
        stage('Docker build and push') {
            steps {
                script { // Corrected "sript" typo to "script"
                    withDockerRegistry(credentialsId: '7307225b-e39c-4b82-811d-965b1c31191b', toolName: 'docker') {
                        sh "docker build -t shopping-cart -f docker/dockerfile ."
                        sh "docker tag shopping-cart kienche/shopping-cart:latest"
                        sh "docker push kienche/shopping-cart:latest"
                    }
                }
            }
        }
    }
}
